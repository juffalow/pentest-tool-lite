import Message from './Message';
import Messages from './Messages';

import namespaceAndImportance from './sort/namespaceAndImportance';

import CommandLineFormat from './format/CommandLine';

class Report {
  results: Array<Object>;

  constructor(results) {
    this.results = results;

    console.log(JSON.stringify(results));
  }

  write() {
    const messages = this.resultsToMessages().sort(namespaceAndImportance);

    console.log(messages);
    console.log();

    (new CommandLineFormat(messages)).format();
  }

  resultsToMessages(): Array<Message> {
    return this.results.map((result) => {
      if (Messages.hasOwnProperty(result.name)) {
        const m = Messages[result.name];
        return new Message(m.name, result.name, m.importance, m.results[result.result].result, m.results[result.result].type, m.results[result.result].message);
      }
      return 'No message for this test! [' + result.name + ']';
    });
  }
}

export default Report;
