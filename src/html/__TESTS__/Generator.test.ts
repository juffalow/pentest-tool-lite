import Generator from '../Generator';
import request from '../../request';
import { Result } from '../../Test';

test('Generator test without generator metatag', async () => {
  const generator = new Generator();
  const mock = jest.spyOn(request, 'get').mockImplementation(async (): Promise<any> => {
    return new Promise((resolve) => {
      resolve({
        body: '<html><body><meta name="description" content="Generator is not here" /></body></html>'
      });
    });
  });

  const result = <Result> await generator.run({ url: 'https://juffalow.com' });

  expect(result.status).toEqual('SUCCESS');

  mock.mockRestore();
});

test('Generator test with generator metatag', async () => {
  const generator = new Generator();
  const mock = jest.spyOn(request, 'get').mockImplementation(async (): Promise<any> => {
    return new Promise((resolve) => {
      resolve({
        body: '<html><body><meta name="description" content="Generator is not here" /><meta name="generator" content="Whatever" /></body></html>'
      });
    });
  });

  const result = <Result> await generator.run({ url: 'https://juffalow.com' });

  expect(result.status).toEqual('WARNING');

  mock.mockRestore();
});
