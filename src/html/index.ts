import Test, { TestParameters, Result } from '../Test';
import Image from './Image';
import DuplicateId from './DuplicateId';
import CSS from './CSS';
import JavaScript from './JavaScript';
import Anchor from './Anchor';
import Generator from './Generator';

export default class HTML extends Test {
  public name = 'HTML';

  constructor() {
    super();
    this.tests = [
      new JavaScript(),
      new CSS(),
      new Image(),
      new Anchor(),
      new DuplicateId(),
      new Generator(),
    ];
  }

  public async test(params: TestParameters): Promise<Result> {
    const tests = this.getTests();
    const results = [];

    for (const test of tests) {
      let result = null;

      try {
        result = await test.run(params);
      } catch (error) {
        result = {
          status: 'ERROR',
          title: test.name,
          description: 'Test failed or cannot be run!',
        }
      }
      
      results.push(result);
    }

    return {
      status: this.getStatus(results.map(result => result.status)),
      title: this.name,
      description: '',
      results,
    };
  }
}
