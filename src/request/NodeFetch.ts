import fetch from 'node-fetch';
import Request, { Options, Response } from './Request';

const getHeaders = (headers) => {
  const keyValues = {};

  Object.keys(headers).forEach((header) => {
    keyValues[header] = headers[header].length === 1 ? headers[header][0] : headers[header];
  });

  return keyValues;
};

export default class NodeFetch implements Request {
  public async get(url: string, options?: Options): Promise<Response> {
    const response = await fetch(url, options);
    const body = await response.text();
    const statusCode = response.status;
    const statusText = response.statusText;
    const headers = getHeaders(response.headers.raw());

    return {
      response,
      statusCode,
      statusText,
      headers,
      body,
      url,
    };
  }
}
