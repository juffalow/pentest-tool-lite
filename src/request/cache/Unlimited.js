// @flow

/**
 *
 * @author Matej 'juffalow' Jellus <juffalow@juffalow.com>
 */
class Unlimited {
  requests: Object;

  constructor() {
    this.requests = {};
  }

  /**
   *
   * @param {string} url
   * @param {Object} response
   */
  add(url: string, error: Object, response: Object, body: Object): void {
    this.requests[url] = {
      error,
      response,
      body,
    };
  }

  /**
   *
   * @param {string} url
   * @returns {boolean}
   */
  has(url: string): boolean {
    return this.requests.hasOwnProperty(url);
  }

  /**
   *
   * @param {string} url
   * @returns {boolean}
   */
  get(url: string): ?Object {
    if (!this.requests.hasOwnProperty(url)) {
      return null;
    }
    return this.requests[url];
  }

  /**
   *
   */
  clear(): void {
    this.requests = {};
  }
}

export default Unlimited;
