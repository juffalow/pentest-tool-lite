import ContentSecurityPolicy from '../ContentSecurityPolicy';
import request from '../../request';
import { Result } from '../../Test';

test('Content-Security-Policy test with correct header', async () => {
  const pentest = new ContentSecurityPolicy();
  const mock = jest.spyOn(request, 'get').mockImplementation(async (): Promise<any> => {
    return new Promise((resolve) => {
      resolve({
        headers: {
          'content-security-policy': 'default-src \'self\'',
        },
      });
    });
  });

  const result = <Result> await pentest.run({ url: 'https://juffalow.com' });

  expect(result.status).toEqual('SUCCESS');

  mock.mockRestore();
});

test('Content-Security-Policy test with missing Content-Security-Policy header', async () => {
  const pentest = new ContentSecurityPolicy();
  const mock = jest.spyOn(request, 'get').mockImplementation(async (): Promise<any> => {
    return new Promise((resolve) => {
      resolve({
        headers: {}
      });
    });
  });

  const result = <Result> await pentest.run({ url: 'https://juffalow.com' });

  expect(result.status).toEqual('ERROR');

  mock.mockRestore();
});
