import Test, { TestParameters, Result } from '../Test';
import HTTPS from './HTTPS';
import http23 from './http23';
import HSTS from './HSTS';
import FingerPrint from './FingerPrint';
import XFrameOptions from './XFrameOptions';
import XXSSProtection from './XXSSProtection';
import ContentSecurityPolicy from './ContentSecurityPolicy';
import Cookies from './Cookies';
import ReferrerPolicy from './ReferrerPolicy';
import PermissionsPolicy from './PermissionsPolicy';

export default class Security extends Test {
  constructor() {
    super();
    this.tests = [
      new HTTPS(),
      new HSTS(),
      new FingerPrint(),
      new XFrameOptions(),
      new XXSSProtection(),
      new ContentSecurityPolicy(),
      new Cookies(),
      new ReferrerPolicy(),
      new PermissionsPolicy(),
      new http23(),
    ];
  }

  public async test(params: TestParameters): Promise<Result> {
    const tests = this.getTests();
    const results = [];

    for (const test of tests) {
      const result = await test.run(params);
      results.push(result);
    }

    return {
      status: 'SUCCESS',
      title: 'Security',
      description: '',
      results,
    };
  }
}
