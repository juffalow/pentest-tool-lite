import Test, { TestParameters, Result } from '../Test';
import request from '../request';
import logger from '../logger';

/**
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/content-encoding
 */
class ContentEncoding extends Test {
  public async test({ url }: TestParameters): Promise<Result> {
    logger.info('Starting content-encoding test...');
    const response = await request.get(url);

    if (!Object.prototype.hasOwnProperty.call(response.headers, 'content-encoding')) {
      return {
        status: 'ERROR',
        title: 'content-encoding',
        description: 'Response headers does not contain content-encoding header!',
      };
    }
	
    const attributes = response.headers['content-encoding'].replace(' ', '').split(',');
    const ce1 = attributes.indexOf('gzip') > -1;
    const ce2 = attributes.indexOf('deflate') > -1;
    const ce3 = attributes.indexOf('br') > -1;

    if(ce1 || ce2 || ce3) {
      return {
        status: 'SUCCESS',
        title: 'content-encoding',
        description: `The value of content-encoding header is present with attributes ${attributes}.`,
      };
    }

    return {
      status: 'ERROR',
      title: 'content-encoding',
      description: `The value of content-encoding header is present with attributes ${attributes}.`,
    };
  }
}

export default ContentEncoding;
