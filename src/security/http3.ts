import Test, { TestParameters, Result } from '../Test';
import request from '../request';
import logger from '../logger';

/**
 *
 * @see https://en.wikipedia.org/wiki/HTTP/3
 */
class http3 extends Test {
  public async test({ url }: TestParameters): Promise<Result> {
    logger.info('Starting http3 test...');
    const response = await request.get(url);

    if (!Object.prototype.hasOwnProperty.call(response.headers, 'alt-svc')) {
      return {
        status: 'WARNING',
        title: 'http3',
        description: 'Response headers does not contain HTTP/3 header!',
      };
    }

    const attributes = response.headers['alt-svc'].replace(' ', '').split(',');
    const h3 = attributes.find(a =>a.includes('h3'));
    if(h3 != undefined) {
      if(h3) {
        return {
          status: 'SUCCESS',
          title: 'http3',
          description: `The value of HTTP/3 header is present.`,
        };
      }
    }
    return {
      status: 'WARNING',
      title: 'http3',
      description: 'Response headers does not contain HTTP/3 header!',
    };
  }
}

export default http3;
