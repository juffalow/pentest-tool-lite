import { WebRiskServiceClient, protos } from '@google-cloud/web-risk';
import Test, { TestParameters, Result } from '../Test';
import logger from '../logger';

/**
 *
 * @see https://cloud.google.com/web-risk
 * @see https://safebrowsing.google.com
 * @see https://transparencyreport.google.com/safe-browsing/search
 */
class GoogleWebRisk extends Test {
  public name = 'GoogleWebRisk';

  public async test({ url }: TestParameters): Promise<Result> {
    logger.info('Starting Google Web Risk test...');

    const client = new WebRiskServiceClient();
  
    const request = {
      uri: url,
      threatTypes: [
        protos.google.cloud.webrisk.v1.ThreatType.MALWARE,
        protos.google.cloud.webrisk.v1.ThreatType.SOCIAL_ENGINEERING,
        protos.google.cloud.webrisk.v1.ThreatType.UNWANTED_SOFTWARE,
      ],
    };
  
    const response = await client.searchUris(request);
  
    const { threat } = response[0];
  
    if (threat !== null) {
      return {
        status: 'ERROR',
        title: this.name,
        description: `This url contains ${threat.threatTypes.join(', ').toLowerCase()}!`,
      };
    }

    return {
      status: 'SUCCESS',
      title: this.name,
      description: 'This URL is safe.',
    };
  }
}

export default GoogleWebRisk;
