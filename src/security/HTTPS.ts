import Test from '../Test';

/**
 * Hypertext Transfer Protocol Secure
 * 
 * The script first transform the url to be unsecure
 * and then make the request. The answer has to be
 * redirect to secure version.
 * 
 * Some sites requires www (or requires version without wwww)
 * and if the request is not as desired, it first redirects
 * to desired version (without https) and then again redirects
 * to version with https. This is also wrong.
 * 
 * @see https://en.wikipedia.org/wiki/HTTPS
 */
class HTTPS extends Test {
  protected request: RequestInterface;

  protected logger: LoggerInterface;

  constructor(request: RequestInterface, logger: LoggerInterface) {
    super();
    this.request = request;
    this.logger = logger;
  }

  async run(url: string): Promise<ResultInterface> {
    this.logger.info('Starting HTTPS test...');
    const unsecureUrl = this.toHttp(url);
    this.logger.debug(`unsecureUrl = ${unsecureUrl}`);
    const result = await this.request.get(unsecureUrl, false);

    if (result.response.statusCode !== 301
      || result.response.statusCode !== 307
      && !result.response.headers.hasOwnProperty('location')
      || !result.response.headers.location.startsWith('https')) {
  
        return this.getResult('HTTPS', 'UNSUCCESSFUL');
    }
    return this.getResult('HTTPS', 'SUCCESSFUL');
  }

  private toHttp(url: string): string {
    return url.replace('https://', 'http://');
  }
}

export default HTTPS;
