import Test, { TestParameters, Result } from '../Test';
import request from '../request';
import logger from '../logger';

class Cookies extends Test {

  public async test({ url }: TestParameters): Promise<Result> {
    logger.info('Starting Cookies test...');
    const response = await request.get(url);
    let subChecks = [];

    if (Object.prototype.hasOwnProperty.call(response.headers, 'set-cookie')) {
      const cookies = response.headers['set-cookie'];
      subChecks = this.checkCookies(cookies);
    }

    return {
      status: subChecks.some(check => check.status === 'WARNING') ? 'WARNING' : 'SUCCESS',
      title: 'Cookies',
      description: '',
      results: subChecks,
    };
  }

  private checkCookies(cookies: string[]): Result[] {
    const regx = new RegExp('.*(secure; HttpOnly)$', 'i');

    return cookies.map((cookie) => {
      if (!regx.test(cookie)) {
        return {
          status: 'WARNING',
          title: cookie.substr(0, cookie.indexOf('=')),
          description: '',
        };
      }
      return {
        status: 'SUCCESS',
        title: cookie.substr(0, cookie.indexOf('=')),
        description: '',
      };
    });
  }
}

export default Cookies;
