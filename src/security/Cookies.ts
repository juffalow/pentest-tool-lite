/*
import Test, { TestParameters } from '../Test';
import request from '../request';
import logger from '../logger';

class Cookies extends Test {

  public async test({ url }: TestParameters): Promise<any> {
    logger.info('Starting Cookies test...');
    const result = await request.get(url);
    let subChecks = [];

    if (result.response.headers.hasOwnProperty('set-cookie')) {
      const cookies = result.response.headers['set-cookie'];
      subChecks = this.checkCookies(cookies);
    }

    return this.getResult('Cookies', this.getStatus(subChecks), subChecks);
  }

  private checkCookies(cookies: string[]): IResult[] {
    const regx = new RegExp('.*(secure; HttpOnly)$', 'i');

    return cookies.map((cookie) => {
      if (!regx.test(cookie)) {
        return this.getResult(cookie.substr(0, cookie.indexOf('=')), 'UNSUCCESSFUL');
      }
      return this.getResult(cookie.substr(0, cookie.indexOf('=')), 'SUCCESSFUL');
    });
  }
}

export default Cookies;
*/