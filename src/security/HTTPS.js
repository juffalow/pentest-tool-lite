// @flow
import Result, { TYPE_OK, TYPE_ERROR } from '../pentest/Result';

export default class HTTPS {
  /**
   * 
   * @param {Object} request
   * @param {Object} logger
   */
  constructor(request: Object, logger: Object) {
    this.request = request;
    this.logger = logger;
  }

  /**
   * 
   * @param {string} url
   */
  toHttpUrl(url: string) {
    return url.replace('https://', 'http://');
  }

  /**
   * 
   * @param {string} url
   * @returns {Object}
   */
  async execute(url: string): Object {
    this.logger.verbose('Executing HTTPS test...');

    const result = await this.request.get(this.toHttpUrl(url), false);

    this.logger.verbose('Status code:', result.response.statusCode);
    this.logger.verbose('Location:', result.response.headers.location);

    if (result.response.statusCode !== 301
      || result.response.statusCode !== 307
      && !result.response.headers.hasOwnProperty('location')
      || !result.response.headers.location.startsWith('https')) {
  
        return new Result(url, TYPE_ERROR, []);
    }
    return new Result(url, TYPE_OK, []);
  }
}