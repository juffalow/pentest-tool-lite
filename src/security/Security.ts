import Test from '../Test';
import HTTPS from './HTTPS';
import HSTS from './HSTS';
import XFrameOptions from './XFrameOptions';
import XXSSProtection from './XXSSProtection';
import FingerPrint from './FingerPrint';
import Cookies from './Cookies';

class Security extends Test {
  protected factory: FactoryInterface;

  constructor(factory: FactoryInterface) {
    super();
    this.factory = factory;
  }

  async run(url: string): Promise<ResultInterface> {
    const https = new HTTPS(this.factory.getRequest(), this.factory.getLogger());
    const xFrameOptions = new XFrameOptions(this.factory.getRequest(), this.factory.getLogger());
    const xXssProtection = new XXSSProtection(this.factory.getRequest(), this.factory.getLogger());
    const hsts = new HSTS(this.factory.getRequest(), this.factory.getLogger());
    const fingerPrint = new FingerPrint(this.factory.getRequest(), this.factory.getLogger());
    const cookies = new Cookies(this.factory.getRequest(), this.factory.getLogger());

    const results = [
      await https.run(url),
      await xFrameOptions.run(url),
      await xXssProtection.run(url),
      await hsts.run(url),
      await fingerPrint.run(url),
      await cookies.run(url),
    ];

    return this.getResult('Security', this.getStatus(results), results);
  }
}

export default Security;
