import Test, { TestParameters, Result } from '../Test';
import request from '../request';
import logger from '../logger';

/**
 *
 * @see https://en.wikipedia.org/wiki/HTTP/2
 * @see https://en.wikipedia.org/wiki/HTTP/3
 */
class http23 extends Test {
  public async test({ url }: TestParameters): Promise<Result> {
    logger.info('Starting http23 test...');
    const response = await request.get(url);

    if (Object.prototype.hasOwnProperty.call(response.headers, 'upgrade')) {
      const attributes = response.headers['upgrade'].replace(' ', '').split(',');
      const h2 = attributes.indexOf('h2') > -1;

      if(h2) {
        return {
          status: 'WARNING',
          title: 'http23',
          description: `The value of HTTP/2 header is present.`,
        };
      }
    }

    if (Object.prototype.hasOwnProperty.call(response.headers, 'alt-svc')) {
      const attributes = response.headers['alt-svc'].replace(' ', '').split(',');
      const h3 = attributes.find(a =>a.includes('h3'));

      if(h3 != undefined) {
        if(h3) {
          return {
            status: 'SUCCESS',
            title: 'http23',
            description: `The value of HTTP/3 header is present.`,
          };
        }
      }
    }

    return {
      status: 'ERROR',
      title: 'http23',
      description: 'Response headers does not contain HTTP/2 nor HTTP/3 header!',
    };
  }
}

export default http23;
