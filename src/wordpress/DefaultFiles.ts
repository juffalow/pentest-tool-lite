import Test, { TestParameters, Result } from '../Test';
import request from '../request';
import logger from '../logger';

class DefaultFiles extends Test {
  public name = 'Default files';
  protected files = [
    'readme.html',
    'licence.txt',
    'wp-config-sample.php',
    'wp-admin/install.php',
    'wp-admin/upgrade.php',
  ];

  public async test({ url }: TestParameters): Promise<Result> {
    logger.info('Starting default files test...');

    let results = [];

    results = await this.checkFiles(url);

    return {
      status: this.getStatus(results.map(result => result.status)),
      title: 'Default files',
      description: '',
      results: results,
    };
  }

  protected async checkFiles(url: string): Promise<Result[]> {
    const results = [];

    for (const file of this.files) {
      const response = await request.get(`${url.endsWith('/') ? url.substring(0, url.length - 1) : url}/${file}`);

      if (Math.floor(response.statusCode / 100) === 2 || Math.floor(response.statusCode / 100) === 5) {
        results.push({
          status: 'WARNING',
          title: file,
          description: `The ${file} file is reachable on the server!`
        });

        continue;
      }

      results.push({
        status: 'SUCCESS',
        title: file,
        description: `The ${file} file is not reachable on the server.`,
      });
    }

    return results;
  }
}

export default DefaultFiles;
