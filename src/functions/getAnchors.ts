import { URL } from 'url';
import getObject from './getObject';

const getAnchors = (result: any): string[] => {
  return getObject(result.html, 'name', 'a')
    .filter((reference: any) => {
      return Object.prototype.hasOwnProperty.call(reference, 'attribs')
        && Object.prototype.hasOwnProperty.call(reference.attribs, 'href')
        && !reference.attribs.href.startsWith('mailto')
        && !reference.attribs.href.startsWith('tel:');
    }).map((reference: any) => {
      const href = reference.attribs.href;

      if (href.startsWith('./')) {
        if (result.url.endsWith('/')) {
          return result.url + href.substring(2);
        }
        return result.url + href.substring(1);
      }

      if (href.startsWith('/')) {
        const origin = (new URL(result.url)).origin;
        return origin + href;
      }

      if (href.startsWith('#')) {
        return result.url + href;
      }

      if (href === '') {
        return result.url;
      }

      return href;
    });
};

export default getAnchors;
