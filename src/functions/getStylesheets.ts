import { URL } from 'url';
import getObject from './getObject';

const getStylesheets = (result: any): string[] => {
  const origin = (new URL(result.url)).origin;

  return getObject(result.html, 'name', 'link')
    .filter((stylesheet: any) => {
      return Object.prototype.hasOwnProperty.call(stylesheet, 'attribs')
        && Object.prototype.hasOwnProperty.call(stylesheet.attribs, 'rel')
        && stylesheet.attribs.rel === 'stylesheet';
    })
    .map((stylesheet: any) => {
      if (stylesheet.attribs.href.startsWith('./')) {
        if (result.url.endsWith('/')) {
          return result.url + stylesheet.attribs.href.substring(2);
        }
        return result.url + stylesheet.attribs.href.substring(1);
      }
      if (stylesheet.attribs.href.startsWith('/')) {
        return origin + stylesheet.attribs.href;
      }
      if (!stylesheet.attribs.href.startsWith('http')) {
        return origin + '/' + stylesheet.attribs.href;
      }
      return stylesheet.attribs.href;
    });
};

export default getStylesheets;
