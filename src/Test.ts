import Result from './common/Result';

abstract class Test {
  abstract async run(url: string): Promise<ResultInterface>;

  getResult(title: string, status: string, results: ResultInterface[] | null = null): ResultInterface {
    return new Result(title, status, results);
  }

  getStatus(results: Array<ResultInterface>): string {
    const error = results.find(result => result.getStatus() === 'ERROR');
    if (typeof error !== 'undefined') {
      return 'ERROR';
    }

    const unsuccessful = results.find(result => result.getStatus() === 'UNSUCCESSFUL');
    if (typeof unsuccessful !== 'undefined') {
      return 'UNSUCCESSFUL';
    }

    return 'SUCCESSFUL';
  }
}

export default Test;
