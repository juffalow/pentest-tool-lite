export type TestParameters = {
  url: string;
}

export type Status = 'FATAL' | 'ERROR' | 'WARNING' | 'SUCCESS';

export type Result = {
  status: Status;
  title: string;
  description: string;
  results?: Array<Result>;
}

export default abstract class Test {
  public async run(params: TestParameters): Promise<Result | Array<Result>> {
    let result = null;

    try {
      result = await this.test(params);
    } catch (err) {
      console.error(err);
    }

    return result;
  }

  protected abstract async test(params: TestParameters): Promise<Result | Array<Result>>;

  public hasSubtests(): boolean {
    return false;
  }
}
