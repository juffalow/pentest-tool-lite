import Test, { TestParameters, Result } from '../Test';
import request from '../request';
import logger from '../logger';
import { parseXml } from '../functions';

class Sitemap extends Test {
  public name = 'Sitemap';

  public async test({ url }: TestParameters): Promise<Result> {
    logger.info(`Starting ${this.constructor.name} test...`);

    const robotsResponse = await request.get(`${url}/robots.txt`);

    let sitemapUrl = `${url}/sitemap.xml`;

    if (Math.floor(robotsResponse.statusCode / 100) === 2) {
      const lines = robotsResponse.body.split(/\r?\n/);

      const sitemap = lines.find(line => line.startsWith('Sitemap'));

      if (typeof sitemap !== 'undefined') {
        sitemapUrl = sitemap.split(' ')[1];
      }
    }

    const response = await request.get(sitemapUrl);
    const xml = await parseXml(response) as object;

    return {
      status: 'sitemapindex' in xml || 'urlset' in xml ? 'SUCCESS' : 'WARNING',
      title: this.constructor.name,
      description: '',
    };
  }
}

export default Sitemap;
